#!/bin/sh

exit_0()
{
  exit 0
}

fancy_exit()
{
  echo "Exiting..."
  exit 0
}

get_help()
{
  help="Usage: dds\nOptions:\n--help, -help, or -h displays this information.\n--version, -version, or -v displays dds version information.\n\ndds does not support any options other than those shown here."
}

get_version()
{
  version="dds version 1.1"
}

check_if_su()
{
  if [ "$(id -u)" != 0 ]; then
    echo "Please run with super user privileges"
    fancy_exit
  fi
}

validate_file()
{
  FILE=$1
  if [ ! -e "$FILE" ]; then
    echo "Not a valid file"
    fancy_exit
  fi
}

check_illumos()
{
  case "$(uname -o)" in
    illumos)
      # illumos distributions like OpenIndiana support this feature 
      status_supported="true";;
    *)
      # Oracle Solaris 11.4 does not support this feature
      status_supported="false"
  esac
}

check_os()
{
  os_type="$(uname -s)"
  bash_compat=0
  echo "OS: $os_type"
  if [ "$os_type" = "NetBSD" ]; then
    # echo "not bash compatible"
    bash_compat=0
  elif [ -z "$(type -p)" ]; then
    # echo "bash compatible"
    bash_compat=1
  else
    # echo "not bash compatible"
    bash_compat=0
  fi
  case "$os_type" in
    # Platforms known to support the status progress indicator
    Linux | FreeBSD | DragonFly)
      status_supported="true";;
    SunOS)
      check_illumos;;
    NetBSD)
      status_supported="other";;
    *)
      status_supported="false"
  esac
}

list_disks()
{
  case "$os_type" in
    Darwin)
      if [ "$(command -v diskutil)" ]; then
        diskutil list
      else
        echo "Your OS was detected to be ${os_type}, but the diskutil command could not be found."
      fi;;
    Linux)
      if [ "$(command -v lsblk)" ]; then
        lsblk
      else
        echo "Your OS was detected to be ${os_type}, but the lsblk command could not be found."
      fi;;
    *)
      echo "The disk list functionality is not implemented for your OS: ${os_type}"
  esac
}

unmount_disks()
{
  case "$os_type" in
    Darwin)
      if [ "$(command -v diskutil)" ]; then
        diskutil unmountDisk "$1"
      else
        echo "Your OS was detected to be ${os_type}, but the diskutil command could not be found."
      fi;;
    Linux)
      umount "$1";;
    *)
      echo "The automatic unmount functionality is not implemented for your OS: ${os_type}"
  esac
}

run_dd()
{
  echo "Beginning process..."
  case $status_supported in
    "true")
      dd if="$src" of="$dest" bs="$bs" conv=noerror,sync status=progress;;
    "false")
      echo "Press Ctrl + t at any time to check progress"
      dd if="$src" of="$dest" bs="$bs" conv=noerror,sync;;
    "other")
      dd if="$src" of="$dest" bs="$bs" conv=noerror,sync progress=1;;
    *)
      echo "Well... this is no good. Feel free to open an issue here: https://github.com/Adobe-Android/dd-safe/issues/new"
  esac
}

main()
{
  echo "Welcome to dd-safe"
  echo "------------------"
  check_if_su
  check_os
  echo "------------------"
  list_disks
  echo "------------------"
  printf 'Enter data source: '
  case $bash_compat in
    1)
      read -e -r src;;
    *)
      read -r src;;
  esac
  validate_file "$src"
  printf 'Enter data destination: '
  case $bash_compat in
    1)
      read -e -r dest;;
    *)
      read -r dest;;
  esac
  validate_file "$dest"
  unmount_disks "$dest"
  printf 'What block size do you want to use? (default: 4096 bytes): '
  read -r bs_in

  case $bs_in in
    "" | " ")
     # BSD and Linux systems use different shorthand for M, m and G, g.

     # Excerpt from FreeBSD 13.0-RELEASE man page. - https://www.freebsd.org/cgi/man.cgi?query=dd&apropos=0&sektion=1&manpath=FreeBSD+13.0-RELEASE&arch=default&format=html
     # Where sizes or speed are specified, a decimal, octal, or hexadecimal num-
     # ber of bytes is expected.	If the number ends with	a "b", "k", "m", "g",
     # "t", "p", or "w", the number is multiplied	by 512,	1024 (1K), 1048576
     # (1M), 1073741824 (1G), 1099511627776 (1T),	1125899906842624 (1P) or the
     # number of bytes in	an integer, respectively.  Two or more numbers may be
     # separated by an "x" to indicate a product.

      # Excerpt from Debian 11 (Bullseye) man page. - https://manpages.debian.org/bullseye/coreutils/dd.1.en.html
      # N and BYTES may be followed by the following multiplicative 
      # suffixes: c=1, w=2, b=512, kB=1000, K=1024, MB=1000*1000, M=1024*1024, xM=M, 
      # GB=1000*1000*1000, G=1024*1024*1024, and so on for T, P, E, Z, Y. 
      # Binary prefixes can be used, too: KiB=K, MiB=M, and so on.

      bs="4096"
      echo "No value provided. Using default value of $bs bytes";;
    *)
      bs=$bs_in;;
  esac

  echo "Preparing to copy from source: $src to destination: $dest with block size: $bs"
  printf 'Do you want to continue? (y/n) '
  read -r confirm

  case $confirm in
    "y" | "Y")
      run_dd $status_supported;;
    *)
    fancy_exit;;
  esac
}

case $1 in
  '')
    main;;
  "--version" | "-version" | "-v")
    get_version
    echo "$version"
    exit_0;;
  "--help" | "-help" | "-h")
    get_help
    echo "$help"
    exit_0;;
  *)
    printf "dds: invalid option\nuse 'dds --help' to show valid options.\n"
    exit_0
esac
