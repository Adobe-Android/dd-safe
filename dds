#!/bin/sh

exit_0()
{
  exit 0
}

fancy_exit()
{
  echo "Exiting..."
  exit 0
}

get_help()
{
  help="Usage: dds\nOptions:\n--help, -help, or -h displays this information.\n--version, -version, or -v displays dds version information.\n\ndds does not support any options other than those shown here."
}

get_version()
{
  version="dds version 1.0"
}

check_if_su()
{
  if [ "$(id -u)" != 0 ]; then
    echo "Please run with su privileges"
    fancy_exit
  fi
}

validate_file()
{
  FILE=$1
  if [ ! -e "$FILE" ]; then
    echo "Not a valid file"
    fancy_exit
  fi
}

check_drive_size()
{
  if [ "$(command -v lsblk)" ]; then
    echo "lsblk detected"
    FILE=$1
    FILE_NAME=${FILE##*/}
    echo "Your drive name is: $FILE_NAME"

    case "$(uname -s)" in
      Linux)
        # | FreeBSD | DragonFly
        FILE_SIZE=$(lsblk | grep "$FILE_NAME" | awk '/disk/ {print $4}');;
      FreeBSD)
        FILE_SIZE=$(lsblk | grep "$FILE_NAME" | awk '/disk/ {print $3}')

    if [ -n "$FILE_SIZE" ]; then
      echo "Your drive at $1 is $FILE_SIZE"
    fi
  fi
}

check_illumos()
{
  case "$(uname -o)" in
    illumos)
      # illumos distributions like OpenIndiana support this feature 
      status_supported="true";;
    *)
      # Oracle Solaris 11.4 does not support this feature
      status_supported="false"
  esac
}

check_os()
{
  case "$(uname -s)" in
    # Platforms known to support the status progress indicator
    Linux | FreeBSD | DragonFly)
      status_supported="true";;
    SunOS)
      check_illumos;;
    *)
      status_supported="false"
  esac
}

run_dd()
{
  case $status_supported in
    "true")
      dd if="$if" of="$of" bs="$bs" conv=noerror,sync status=progress;;
    "false")
      dd if="$if" of="$of" bs="$bs" conv=noerror,sync;;
    *)
      echo "Well... this is no good. Feel free to open an issue here: https://github.com/Adobe-Android/dd-safe/issues/new"
  esac
}

main()
{
  echo "Welcome to dd-safe"
  echo "------------------"
  check_if_su
  printf 'Enter data source: '
  read -r if
  validate_file "$if"
  printf 'Enter data destination: '
  read -r of
  validate_file "$of"
  check_drive_size "$of"
  printf 'What block size do you want to use? (default: 64k, 128k, 1M): '
  read -r bs

  case $bs in
    "" | " ")
      bs="64k"
      echo "No value provided. Setting default value: $bs";;
    *)
      bs=$bs;;
  esac

  echo "Preparing to copy from source: $if to destination: $of with block size: $bs"
  printf 'Do you want to continue? (y/n) '
  read -r confirm

  case $confirm in
    "y" | "Y")
      echo "Beginning process..."
      check_os
      run_dd $status_supported;;
    *)
    fancy_exit;;
  esac
}

case $1 in
  '')
    main;;
  "--version" | "-version" | "-v")
    get_version
    echo "$version"
    exit_0;;
  "--help" | "-help" | "-h")
    get_help
    echo "$help"
    exit_0;;
  *)
    printf "dds: invalid option\nuse 'dds --help' to show valid options.\n"
    exit_0
esac